// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/apache/incubator-trafficcontrol/traffic_ops/traffic_ops_golang/toclient/models"
)

// GetCDNByIDReader is a Reader for the GetCDNByID structure.
type GetCDNByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCDNByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCDNByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCDNByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCDNByIDOK creates a GetCDNByIDOK with default headers values
func NewGetCDNByIDOK() *GetCDNByIDOK {
	return &GetCDNByIDOK{}
}

/*GetCDNByIDOK handles this case with default header values.

CDNs -  CDNsResponse to get the "response" top level key
*/
type GetCDNByIDOK struct {
	Payload *models.CDNsResponse
}

func (o *GetCDNByIDOK) Error() string {
	return fmt.Sprintf("[GET /cdns/{id}][%d] getCDNByIdOK  %+v", 200, o.Payload)
}

func (o *GetCDNByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CDNsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCDNByIDBadRequest creates a GetCDNByIDBadRequest with default headers values
func NewGetCDNByIDBadRequest() *GetCDNByIDBadRequest {
	return &GetCDNByIDBadRequest{}
}

/*GetCDNByIDBadRequest handles this case with default header values.

Alerts - informs the client of server side messages
*/
type GetCDNByIDBadRequest struct {
	Payload models.GetCDNByIDBadRequestBody
}

func (o *GetCDNByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /cdns/{id}][%d] getCDNByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCDNByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
