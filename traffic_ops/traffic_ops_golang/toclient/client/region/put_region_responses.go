// Code generated by go-swagger; DO NOT EDIT.

package region

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/apache/incubator-trafficcontrol/traffic_ops/traffic_ops_golang/toclient/models"
)

// PutRegionReader is a Reader for the PutRegion structure.
type PutRegionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRegionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutRegionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutRegionOK creates a PutRegionOK with default headers values
func NewPutRegionOK() *PutRegionOK {
	return &PutRegionOK{}
}

/*PutRegionOK handles this case with default header values.

Region -  RegionResponse to get the "response" top level key
*/
type PutRegionOK struct {
	Payload *models.RegionResponse
}

func (o *PutRegionOK) Error() string {
	return fmt.Sprintf("[PUT /regions/{id}][%d] putRegionOK  %+v", 200, o.Payload)
}

func (o *PutRegionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
