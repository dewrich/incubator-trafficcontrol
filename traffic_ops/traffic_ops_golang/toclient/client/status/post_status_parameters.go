// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/apache/incubator-trafficcontrol/traffic_ops/traffic_ops_golang/toclient/models"
)

// NewPostStatusParams creates a new PostStatusParams object
// with the default values initialized.
func NewPostStatusParams() *PostStatusParams {
	var ()
	return &PostStatusParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostStatusParamsWithTimeout creates a new PostStatusParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostStatusParamsWithTimeout(timeout time.Duration) *PostStatusParams {
	var ()
	return &PostStatusParams{

		timeout: timeout,
	}
}

// NewPostStatusParamsWithContext creates a new PostStatusParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostStatusParamsWithContext(ctx context.Context) *PostStatusParams {
	var ()
	return &PostStatusParams{

		Context: ctx,
	}
}

// NewPostStatusParamsWithHTTPClient creates a new PostStatusParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostStatusParamsWithHTTPClient(client *http.Client) *PostStatusParams {
	var ()
	return &PostStatusParams{
		HTTPClient: client,
	}
}

/*PostStatusParams contains all the parameters to send to the API endpoint
for the post status operation typically these are written to a http.Request
*/
type PostStatusParams struct {

	/*Status
	  Status Request Body

	*/
	Status *models.Status

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post status params
func (o *PostStatusParams) WithTimeout(timeout time.Duration) *PostStatusParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post status params
func (o *PostStatusParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post status params
func (o *PostStatusParams) WithContext(ctx context.Context) *PostStatusParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post status params
func (o *PostStatusParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post status params
func (o *PostStatusParams) WithHTTPClient(client *http.Client) *PostStatusParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post status params
func (o *PostStatusParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithStatus adds the status to the post status params
func (o *PostStatusParams) WithStatus(status *models.Status) *PostStatusParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the post status params
func (o *PostStatusParams) SetStatus(status *models.Status) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *PostStatusParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Status != nil {
		if err := r.SetBodyParam(o.Status); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
