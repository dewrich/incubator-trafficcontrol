// Code generated by go-swagger; DO NOT EDIT.

package division

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/apache/incubator-trafficcontrol/traffic_ops/traffic_ops_golang/toclient/models"
)

// GetDivisionsReader is a Reader for the GetDivisions structure.
type GetDivisionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDivisionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDivisionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDivisionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDivisionsOK creates a GetDivisionsOK with default headers values
func NewGetDivisionsOK() *GetDivisionsOK {
	return &GetDivisionsOK{}
}

/*GetDivisionsOK handles this case with default header values.

Divisions -  DivisionsResponse to get the "response" top level key
*/
type GetDivisionsOK struct {
	Payload *models.DivisionsResponse
}

func (o *GetDivisionsOK) Error() string {
	return fmt.Sprintf("[GET /divisions][%d] getDivisionsOK  %+v", 200, o.Payload)
}

func (o *GetDivisionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DivisionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDivisionsBadRequest creates a GetDivisionsBadRequest with default headers values
func NewGetDivisionsBadRequest() *GetDivisionsBadRequest {
	return &GetDivisionsBadRequest{}
}

/*GetDivisionsBadRequest handles this case with default header values.

Alerts - informs the client of server side messages
*/
type GetDivisionsBadRequest struct {
	Payload models.GetDivisionsBadRequestBody
}

func (o *GetDivisionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /divisions][%d] getDivisionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetDivisionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
