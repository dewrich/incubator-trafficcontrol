// Code generated by go-swagger; DO NOT EDIT.

package division

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/apache/incubator-trafficcontrol/traffic_ops/traffic_ops_golang/toclient/models"
)

// GetDivisionByIDReader is a Reader for the GetDivisionByID structure.
type GetDivisionByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDivisionByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDivisionByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDivisionByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDivisionByIDOK creates a GetDivisionByIDOK with default headers values
func NewGetDivisionByIDOK() *GetDivisionByIDOK {
	return &GetDivisionByIDOK{}
}

/*GetDivisionByIDOK handles this case with default header values.

Divisions -  DivisionsResponse to get the "response" top level key
*/
type GetDivisionByIDOK struct {
	Payload *models.DivisionsResponse
}

func (o *GetDivisionByIDOK) Error() string {
	return fmt.Sprintf("[GET /divisions/{id}][%d] getDivisionByIdOK  %+v", 200, o.Payload)
}

func (o *GetDivisionByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DivisionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDivisionByIDBadRequest creates a GetDivisionByIDBadRequest with default headers values
func NewGetDivisionByIDBadRequest() *GetDivisionByIDBadRequest {
	return &GetDivisionByIDBadRequest{}
}

/*GetDivisionByIDBadRequest handles this case with default header values.

Alerts - informs the client of server side messages
*/
type GetDivisionByIDBadRequest struct {
	Payload models.GetDivisionByIDBadRequestBody
}

func (o *GetDivisionByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /divisions/{id}][%d] getDivisionByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetDivisionByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
