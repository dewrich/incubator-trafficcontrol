// Code generated by go-swagger; DO NOT EDIT.

package asn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/apache/incubator-trafficcontrol/traffic_ops/traffic_ops_golang/toclient/models"
)

// GetASNByIDReader is a Reader for the GetASNByID structure.
type GetASNByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetASNByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetASNByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetASNByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetASNByIDOK creates a GetASNByIDOK with default headers values
func NewGetASNByIDOK() *GetASNByIDOK {
	return &GetASNByIDOK{}
}

/*GetASNByIDOK handles this case with default header values.

ASNs -  ASNsResponse to get the "response" top level key
*/
type GetASNByIDOK struct {
	Payload *models.ASNsResponse
}

func (o *GetASNByIDOK) Error() string {
	return fmt.Sprintf("[GET /asns/{id}][%d] getASNByIdOK  %+v", 200, o.Payload)
}

func (o *GetASNByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ASNsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetASNByIDBadRequest creates a GetASNByIDBadRequest with default headers values
func NewGetASNByIDBadRequest() *GetASNByIDBadRequest {
	return &GetASNByIDBadRequest{}
}

/*GetASNByIDBadRequest handles this case with default header values.

Alerts - informs the client of server side messages
*/
type GetASNByIDBadRequest struct {
	Payload models.GetASNByIDBadRequestBody
}

func (o *GetASNByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /asns/{id}][%d] getASNByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetASNByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
