// Code generated by go-swagger; DO NOT EDIT.

package division

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/apache/incubator-trafficcontrol.tor-api/traffic_ops/traffic_ops_golang/toclient/models"
)

// GetDivisionByIDOKCode is the HTTP code returned for type GetDivisionByIDOK
const GetDivisionByIDOKCode int = 200

/*GetDivisionByIDOK Divisions -  DivisionsResponse to get the "response" top level key

swagger:response getDivisionByIdOK
*/
type GetDivisionByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.DivisionsResponse `json:"body,omitempty"`
}

// NewGetDivisionByIDOK creates GetDivisionByIDOK with default headers values
func NewGetDivisionByIDOK() *GetDivisionByIDOK {
	return &GetDivisionByIDOK{}
}

// WithPayload adds the payload to the get division by Id o k response
func (o *GetDivisionByIDOK) WithPayload(payload *models.DivisionsResponse) *GetDivisionByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get division by Id o k response
func (o *GetDivisionByIDOK) SetPayload(payload *models.DivisionsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDivisionByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDivisionByIDBadRequestCode is the HTTP code returned for type GetDivisionByIDBadRequest
const GetDivisionByIDBadRequestCode int = 400

/*GetDivisionByIDBadRequest Alerts - informs the client of server side messages

swagger:response getDivisionByIdBadRequest
*/
type GetDivisionByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.GetDivisionByIDBadRequestBody `json:"body,omitempty"`
}

// NewGetDivisionByIDBadRequest creates GetDivisionByIDBadRequest with default headers values
func NewGetDivisionByIDBadRequest() *GetDivisionByIDBadRequest {
	return &GetDivisionByIDBadRequest{}
}

// WithPayload adds the payload to the get division by Id bad request response
func (o *GetDivisionByIDBadRequest) WithPayload(payload models.GetDivisionByIDBadRequestBody) *GetDivisionByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get division by Id bad request response
func (o *GetDivisionByIDBadRequest) SetPayload(payload models.GetDivisionByIDBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDivisionByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetDivisionByIDBadRequestBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
