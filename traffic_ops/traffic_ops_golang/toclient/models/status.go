// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Status A Single Statuses Response for Update and Create to depict what changed
// swagger:model Status
type Status struct {

	// The Statuses to retrieve
	//
	// description of the status type
	Description string `json:"description,omitempty"`

	// ID of the Status
	// Required: true
	ID *int64 `json:"id"`

	// The Time / Date this server entry was last updated
	LastUpdated string `json:"lastUpdated,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this status
func (m *Status) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Status) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

var statusTypeNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["[\"OFFLINE\""," \"ONLINE\""," \"ADMIN_DOWN\""," \"REPORTED\""," \"CCR_IGNORE\""," \"PRE_PROD\"]"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		statusTypeNamePropEnum = append(statusTypeNamePropEnum, v)
	}
}

const (
	// StatusNameOFFLINE captures enum value "[\"OFFLINE\""
	StatusNameOFFLINE string = "[\"OFFLINE\""
	// StatusNameNrONLINE captures enum value " \"ONLINE\""
	StatusNameNrONLINE string = " \"ONLINE\""
	// StatusNameNrADMINDOWN captures enum value " \"ADMIN_DOWN\""
	StatusNameNrADMINDOWN string = " \"ADMIN_DOWN\""
	// StatusNameNrREPORTED captures enum value " \"REPORTED\""
	StatusNameNrREPORTED string = " \"REPORTED\""
	// StatusNameNrCCRIGNORE captures enum value " \"CCR_IGNORE\""
	StatusNameNrCCRIGNORE string = " \"CCR_IGNORE\""
	// StatusNameNrPREPROD captures enum value " \"PRE_PROD\"]"
	StatusNameNrPREPROD string = " \"PRE_PROD\"]"
)

// prop value enum
func (m *Status) validateNameEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, statusTypeNamePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Status) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	// value enum
	if err := m.validateNameEnum("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Status) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Status) UnmarshalBinary(b []byte) error {
	var res Status
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
